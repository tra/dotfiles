{"mode":"editor","version":1,"windowDimensions":{"x":562,"y":29,"width":1856,"height":1359,"maximized":false},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/tra/src/chef-repo","buffers":[{"text":"name \"aa\"\ndescription \"Advanced Apps base server setup\"\n\nrun_list(\n  \"recipe[chef-vault]\",\n  \"recipe[aa::setup-locale]\",\n  \"recipe[apt]\",\n  \"recipe[timezone]\",\n  \"recipe[build-essential]\",\n  \"recipe[aa::setup-aa]\",\n  \"recipe[aa::pubkeys]\",\n  \"recipe[collectd]\",\n  \"recipe[logstash::shipper]\",\n  \"recipe[logrotate]\",\n  \"role[spark-submitter]\",\n)\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":6,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/tra/src/chef-repo/roles/aa.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"43467d8e15a96150b987169f75ceba14100670c9","deserializer":"TextBuffer"},{"text":"#!/bin/bash\n#############################################################################\ncomv_chef_aa_secrets_usage () {\nprintf \"%s\" \"\\\nusage: comv chef aa-secrets [options] NAME\n\n   Generate secrets for Advanced Apps under the given environment.\n\noptions:\n\n  -k PRIVATE_KEY_FILE     Private key to access github\n                            defaults to ~/.ssh/id_rsa\n  -r                      Generate random passwords\n  -h                      prints help\n\n\"\n}\nargs=\"\"\nwhile [ $OPTIND -le $# ]\ndo\n  if getopts \"hk:r\" option\n  then\n    case $option in\n      (k) private_key_file=\"$OPTARG\" ;;\n      (r) random_passwords=true ;;\n      (h) comv_chef_aa_secrets_usage\n          exit 0 ;;\n      (*) comv_chef_aa_secrets_usage | head -n 1\n          exit 2 ;;\n    esac\n  else\n    args=\"$args \\\"\\${$OPTIND}\\\"\"\n    OPTIND=$(($OPTIND + 1))\n  fi\ndone\neval set -- \"$args\"\n\nenv_name=$1\nprivate_key_file=${private_key_file:-~/.ssh/id_rsa}\nrandom_passwords=${random_passwords:-false}\n\nif [ -z $env_name ]\nthen\n  echo \"No environment name provided, aborting.\"\n  comv_chef_aa_secrets_usage | head -n 1\n  exit 1\nfi\n\n#############################################################################\n\nemail_suffix=\"-${env_name}\"\nif [ \"x${env_name}\" = \"xproduction\" ]\nthen\n  email_suffix=\"\"\nfi\n\nmkdir -p certificates/$env_name\ncd certificates/$env_name\n\ngen_password() {\n  random_password=${1:-false}\n  if [ $random_password = true ]\n  then\n    ruby -r securerandom -e 'puts SecureRandom.urlsafe_base64'\n  else\n    echo \"P@ssw0rd\"\n  fi\n}\n\ncat > seed.yml.tmp <<EOF\ndefault: &DEFAULT\n  users:\n    -\n     email: aa-admin${email_suffix}@comverge.com\n     password: \"$(gen_password $random_passwords)\"\n     organizations:\n       -\n        name: \"UNIVERSAL ORGANIZATION\"\n        roles:\n          - \"System Administrator\"\n          - \"Grid Administrator\"\n          - \"Organization Admin\"\n          - \"User Admin\"\n          - \"Weather Station Manager\"\n          - \"Metrics Manager\"\n          - \"Grid Viewer\"\n          - \"Control Operator\"\n    -\n     email: aa-ai-telemetry${email_suffix}@comverge.com\n     password: \"$(gen_password $random_passwords)\"\n     organizations:\n       -\n        name: \"SYSTEM ORGANIZATION\"\n        roles: [\"Telemetry\"]\n    -\n     email: aa-ai-weather${email_suffix}@comverge.com\n     password: \"$(gen_password $random_passwords)\"\n     organizations:\n       -\n        name: \"SYSTEM ORGANIZATION\"\n        roles: [\"Weather\"]\n    -\n     email: aa-learn${email_suffix}@comverge.com\n     password: \"$(gen_password $random_passwords)\"\n     organizations:\n       -\n        name: \"SYSTEM ORGANIZATION\"\n        roles: [\"Learn\", \"Grid Viewer\"]\n\ndevelopment: *DEFAULT\nvagrant: *DEFAULT\ntest: *DEFAULT\nproduction: *DEFAULT\nEOF\n\ngen_file() {\n  file=$1\n  shift 1\n  # -s exists and size is > 0\n  if ! [ -s $file ]\n  then\n    echo \"Generating $file\" >&2\n    if \"$@\" > $file.tmp\n    then\n      jq . $file.tmp > $file || rm -f $file\n    fi\n    rm -f $file.tmp\n  else\n    echo \"Skipping $file, already exists\" >&2\n  fi\n}\n\ngen_password_file_by_role() {\n  file=$1\n  truncatedFile=`basename $file \".json\"`\n  role=$2\n  client_key=${3:-client_id}\n  password_key=${4:-password}\n  shift 4\n  ruby -r json -r yaml -e \"\n    seed = YAML.load_file('seed.yml.tmp')\n    users = seed['default']['users']\n    user  = users.find {|u| u['organizations'].find {|o| o['roles'].include?('$role') } }\n    puts({'id' => '$truncatedFile', '$client_key' => user['email'], '$password_key' => user['password']}.to_json)\n  \" | gen_file \"$file\" cat\n}\n\ngen_password_file_by_role \"ai-telemetry-auth.json\" \"Telemetry\" \"client_id\" \"client_secret\"\ngen_password_file_by_role \"ai-weather-auth.json\" \"Weather\" \"client_id\" \"client_secret\"\n\n# Copy into place the private key for a pair that has been added to GitHub, or\n# create a new one as below and link the public key to a deployment account.\ngen_file \"deploy_rsa.json\" \\\n  ruby -rjson -e \\\n    'puts({\"id\" => \"deploy_rsa\" ,\"private\" => File.read(ARGV[0]), \"public\" => File.read(ARGV[1])}.to_json)' \\\n    \"${private_key_file}\" \"${private_key_file}.pub\"\n\n#The directory secret is used as a password for components to register with\n#aa-directory. It's just a big random string that has to be stable across all\n#components.\ngen_file \"directory.json\" \\\n  ruby -rjson -rsecurerandom -e \\\n    'puts({\"id\" => \"directory\", \"secret\" => SecureRandom.hex(128).to_s}.to_json)'\n\n#Fort Collins access token\n#Used to get access to the Fort Collins telemetry feed.\ngen_file \"fort_collins.json\" cat <<EOF\n  {\"id\": \"fort_collins\", \"token\": \"$FORT_COLLINS_ACCESS_TOKEN\"}\nEOF\n\nif [ -z $FORT_COLLINS_ACCESS_TOKEN ]\nthen\n  echo \"Removing fort_collins.json, FORT_COLLINS_ACCESS_TOKEN is empty\" >&2\nfi\n\n# JWT Keys\n# These files are used by our auth system -- `aa-organizations` gets\n# the public and private key while all others get just the public key. Users get\n# issued a token signed by the `aa-organizations` private key. The components\n# use the public key to verify the token and grant access as described by the\n# token. These files are a standard key-pair, where the public key has been\n# extracted.\nssh-keygen -t rsa -C \"aa-jwt${email_suffix}@comverge.com\" -f new_rsa.tmp -N \"\" > /dev/null\nrm new_rsa.tmp.pub\n\ngen_file \"jwt_rsa_pub.json\" \\\n  ruby -rjson -e \\\n    'puts({\"id\" => \"jwt_rsa_pub\", \"jwt_rsa.pub\" => `openssl rsa -in new_rsa.tmp -pubout 2> /dev/null`}.to_json)'\n\ngen_file \"jwt_rsa.json\" \\\n  ruby -rjson -e \\\n    'puts({\"id\" => \"jwt_rsa\", \"jwt_rsa.pem\" => File.read(\"new_rsa.tmp\")}.to_json)'\n\nrm new_rsa.tmp\n\ngen_password_file_by_role \"prediction_training.json\" \"Learn\"\ngen_password_file_by_role \"prediction_persisting.json\" \"Learn\"\n\ngen_file \"seed.json\" \\\n  ruby -rjson -e \\\n    'puts({\"id\" => \"seed\", \"users\" => File.read(\"seed.yml.tmp\")}.to_json)'\n\nrm seed.yml.tmp\n","markers":{"markers":{"1":{"id":1,"range":[[108,0],[108,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":12,"goalBufferRange":null,"autoscroll":true,"preserveFolds":true},"deserializer":"Marker"},"4":{"id":4,"range":[[141,0],[141,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"11":{"id":11,"range":[[141,0],[141,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"19":{"id":19,"range":[[141,0],[141,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"22":{"id":22,"range":[[141,0],[141,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"29":{"id":29,"range":[[141,0],[141,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"37":{"id":37,"range":[[140,0],[140,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"52":{"id":52,"range":[[138,0],[138,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"77":{"id":77,"range":[[138,0],[138,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"93":{"id":93,"range":[[108,0],[108,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[106,0],[107,0]],"newRange":[[106,0],[106,0]],"oldText":"<<<<<<< Updated upstream\n","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[108,0],[112,0]],"newRange":[[108,0],[108,0]],"oldText":"=======\n        name: \"UNIVERSAL ORGANIZATION\"\n        roles: [\"Learn\", \"Grid Viewer\", \"Grid Administrator\"]\n>>>>>>> Stashed changes\n","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/tra/src/chef-repo/libexec/comv-chef_aa-secrets","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"c032e0e65c3f803721a875ae81a6cdf3c53ce426","deserializer":"TextBuffer"},{"text":"require 'pathname'\n\nuser 'aa' do\n  supports :manage_home => true\n  comment \"Advanced Apps User\"\n  home \"/home/aa\"\n  shell \"/bin/bash\"\n  action :create\nend\n\n#############################################################################\n# Package\n# http://java.dzone.com/articles/installing-apache-cassandra\n#############################################################################\n\napt_repository \"apache-cassandra-debian\" do\n  uri          \"http://www.apache.org/dist/cassandra/debian\"\n  distribution \"20x\"     # ?? not sure why 20x vs 'precise'\n  components   [\"main\"]\n  keyserver    \"hkp://pgp.mit.edu:80\"\n  key          \"4BD736A82B5C1B00\"\n  action       :add\n  notifies     :run, \"execute[apt-get update]\", :immediately\nend\n\npackage \"cassandra\" do\n  action :install\n  version \"2.0.12\"\n  options \"--force-yes -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confnew\"\n  notifies :restart, 'service[cassandra]', :delayed\nend\n\n# stop and disable /etc/init.d script in favor of upstart\nservice \"cassandra-system-v\" do\n  service_name \"cassandra\"\n  provider Chef::Provider::Service::Debian\n  action [:disable, :stop]\nend\n\nexecute \"/etc/init.d/cassandra stop\" do\n  only_if { ::File.exists?('/etc/init.d/cassandra') }\n  only_if \"/etc/init.d/cassandra status\"\nend\n\n# Place our own init script\ntemplate \"/etc/init/cassandra.conf\" do\n  source \"cassandra.init.erb\"\n  owner \"root\"\n  group \"root\"\n  mode \"0644\"\n  action :create\nend\n\nservice \"cassandra\" do\n  supports :restart => true, :status => true\n  provider Chef::Provider::Service::Upstart\n  action [:enable]\nend\n\n#############################################################################\n# Config\n# See also: http://www.datastax.com/documentation/cassandra/2.0/cassandra/install/installRecommendSettings.html\n#############################################################################\n\nprivate_ip_addr = node['ipaddress'] # ohai\ncluster_name = node['cassandra']['cluster_name']\nseeds = search(:node, 'role:aa-cassandra').shuffle.shift(3).compact.map {|n| n['ipaddress'] }.sort\nseeds = [private_ip_addr] if seeds.empty?\n\ntemplate \"/etc/cassandra/cassandra.yaml\" do\n  source \"cassandra.yaml.erb\"\n  owner \"aa\"\n  group \"aa\"\n  mode \"0644\"\n  action :create\n  variables(\n    :private_ip_addr => private_ip_addr,\n    :cluster_name => cluster_name,\n    :seeds => seeds,\n  )\n  notifies :restart, \"service[cassandra]\", :delayed\nend\n\ntemplate \"/etc/security/limits.d/cassandra.conf\" do\n  source \"cassandra.conf.erb\"\n  owner \"aa\"\n  group \"aa\"\n  mode \"0644\"\n  action :create\n  notifies :restart, \"service[cassandra]\", :delayed\nend\n\nexecute \"restart-sysctl\" do\n  command \"sudo sysctl -p\"\n  action :nothing\nend\n\ntemplate \"/etc/sysctl.conf\" do\n  source \"sysctl.conf.erb\"\n  owner \"aa\"\n  group \"aa\"\n  mode \"0644\"\n  action :create\n  notifies :run, \"execute[restart-sysctl]\", :immediately\nend\n\nexecute \"disable swap\" do\n  command \"sudo swapoff --all\"\nend\n\ntemplate \"/etc/cassandra/cassandra-env.sh\" do\n  source \"cassandra-env.sh.erb\"\n  owner \"aa\"\n  group \"aa\"\n  mode \"0755\"\n  action :create\n  variables(\n    :private_ip_addr => private_ip_addr,\n  )\n  notifies :restart, \"service[cassandra]\", :delayed\nend\n\nservice \"cassandra\" do\n  action [:start]\n  not_if \"status cassandra | grep -q start\"\nend\n\n#########\n# Cron\n#########\n\nfile \"/etc/cron.weekly/cassandra-nodetool-repair\" do\n  content \"nodetool -pr repair\"\n  owner \"root\"\n  group \"root\"\n  mode \"0755\"\n  action :create\nend\n","markers":{"markers":{"1":{"id":1,"range":[[25,22],[25,22]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":22,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[27,0],[27,0]]},"newParams":{"range":[[27,0],[27,24]]},"deserializer":"MarkerPatch"},{"oldRange":[[27,0],[27,24]],"newRange":[[27,0],[27,0]],"oldText":"<<<<<<< Updated upstream","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[27,0],[27,0]]},"newParams":{"range":[[27,0],[28,0]]},"deserializer":"MarkerPatch"},{"oldRange":[[27,0],[28,0]],"newRange":[[27,0],[27,0]],"oldText":"\n","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[29,0],[33,0]],"newRange":[[29,0],[29,0]],"oldText":"=======\n  version \"2.0.11\"\n  options \"-o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confnew\"\n>>>>>>> Stashed changes\n","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/tra/src/chef-repo/cookbooks/aa/recipes/cassandra.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ca647f221ab290533685387792f75490bb499d9d","deserializer":"TextBuffer"},{"text":"#############################################################################\n# Setup deploy credentials.  Consists of adding the deploy private key and\n# then make ssh use the deploy key when talking to github.\n#############################################################################\n\nuser 'aa' do\n  supports :manage_home => true\n  comment \"Advanced Apps User\"\n  home \"/home/aa\"\n  shell \"/bin/bash\"\n  action :create\nend\n\ndirectory \"/home/aa\" do\n  owner \"aa\"\n  group \"aa\"\nend\n\ndirectory \"/home/aa/.ssh\" do\n  recursive true\n  owner \"aa\"\n  group \"aa\"\n  mode \"0700\"\nend\n\ndeploy_rsa = chef_vault_item(\"secrets\", \"deploy_rsa\")[\"private\"]\nfile \"/home/aa/.ssh/deploy_rsa.pem\" do\n  owner 'aa'\n  group 'aa'\n  mode \"0400\"\n  content deploy_rsa\n  action :create\nend\n\ntemplate \"/home/aa/.ssh/config\" do\n  source \"ssh_config.erb\"\n  owner \"aa\"\n  group \"aa\"\n  mode \"0600\"\n  action :create\nend\n\n#############################################################################\n# Modern Git to allow 'git submodule update --depth' >= 1.8.4\n#############################################################################\n\npackage \"git\" do\n  action :install\nend\n\n#############################################################################\n# Ruby for Advanced Apps\n###########################################################################\n\n# If we installed with the old ruby-install based setup, we have to remove the\n# /usr/local/* ruby stuff or $PATH starts being weird and lying about which\n# ruby is the right one.\nexecute \"remove ruby-installed ruby\" do\n  command \"cd /usr/local/src/ruby-2.1.2 && make uninstall && rm -rf /usr/local/src/ruby-2.1.2\"\n  only_if { File.exist?(\"/usr/local/src/ruby-2.1.2/configure\") }\nend\n\nexecute \"delete chef binaries in /usr/local/bin - /usr/bin has the official ones\" do\n  command \"rm -f /usr/local/bin/chef*\"\nend\n\nlsb_codename = node['lsb']['codename'] # ohai\napt_repository \"brightbox-ruby-ng-#{lsb_codename}\" do\n  uri          \"http://ppa.launchpad.net/brightbox/ruby-ng/ubuntu\"\n  distribution lsb_codename\n  components   [\"main\"]\n  keyserver    \"keyserver.ubuntu.com\"\n  key          \"C3173AA6\"\n  action       :add\n  notifies     :run, \"execute[apt-get update]\", :immediately\nend\n\npackage node['aa']['ruby_version'] do\n  action :install\nend\n\npackage \"#{node['aa']['ruby_version']}-dev\" do\n  action :install\nend\n\ngem_package \"bundler\" do\n  version '~> 1.6.0'\n  action :install\nend\n\n#############################################################################\n# Advanced Apps\n#\n# This is designed such that individual components will set themselves up.\n#############################################################################\n\n#\n# shared/tmp\n#\n\ndirectory \"/opt/aa/shared/tmp\" do\n  owner \"aa\"\n  group \"aa\"\n  recursive true\nend\n\n#\n# shared/config\n#\n\ndirectory \"/opt/aa/shared/config\" do\n  owner \"aa\"\n  group \"aa\"\n  recursive true\nend\n\n# Later do something like the search to find where the db is...\nhost = node['aa']['database']['host'] # || search(:node, \"role:aa-db\")\ntemplate \"/opt/aa/shared/config/database.yml\" do\n  source \"database.yml.erb\"\n  owner \"aa\"\n  group \"aa\"\n  mode \"0600\"\n  action :create\n  variables(:host => host)\nend\n\n#\n# shared/bundle\n#\n\ndirectory \"/opt/aa/shared/bundle\" do\n  owner \"aa\"\n  group \"aa\"\n  recursive true\nend\n\n#\n# advanced-apps\n#\n\napplication 'aa' do\n  path  '/opt/aa'\n  owner 'aa'\n  group 'aa'\n\n  repository \"git@#{node['aa']['host']}:#{node['aa']['repo']}\"\n  revision   node['aa']['ref']\n  migrate true\n  migration_command %{\n    bundle install --path /opt/aa/shared/bundle &&\n    git submodule init &&\n    git submodule update vendor/prototype vendor/ts\n  }\n  enable_submodules false\nend\n\ndirectory \"/var/log/advanced-apps\" do\n  owner \"aa\"\n  group \"aa\"\n  action :create\nend\n\nlink \"/opt/aa/current/log\" do\n  to \"/var/log/advanced-apps\"\nend\n\n#############################################################################\n# Add `aa` to PATH (see the template for some notes)\n#############################################################################\n\ntemplate \"/usr/local/bin/aa\" do\n  source \"aa.erb\"\n  owner \"aa\"\n  group \"aa\"\n  mode \"0755\"\n  action :create\n  variables(:aa_home => '/opt/aa/current')\nend\n\n#############################################################################\n# for puma (which isn't used but is in lots of Gemfiles)\n#############################################################################\n\npackage \"libcurl4-openssl-dev\" do\n  action :install\nend\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":26},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/tra/src/chef-repo/cookbooks/aa/recipes/setup-aa.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"76f449dad061fe94802b4ed7ad235042322a5e8d","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":6,"softTabs":true,"displayBuffer":{"id":7,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/tra/src/chef-repo/roles/aa.rb","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":12,"softTabs":true,"displayBuffer":{"id":13,"softWrapped":false,"editorWidthInChars":null,"scrollTop":2392,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/tra/src/chef-repo/libexec/comv-chef_aa-secrets","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":26,"softTabs":true,"displayBuffer":{"id":27,"softWrapped":false,"editorWidthInChars":null,"scrollTop":1256,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/tra/src/chef-repo/cookbooks/aa/recipes/setup-aa.rb","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":22,"softTabs":true,"displayBuffer":{"id":23,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/tra/src/chef-repo/cookbooks/aa/recipes/cassandra.rb","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemUri":"/Users/tra/src/chef-repo/cookbooks/aa/recipes/setup-aa.rb","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-ruby","language-shellscript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["Generating","prediction_","Learn","2.0.10"],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/Users/tra/src/chef-repo/roles/aa.rb":1418407472511,"/Users/tra/src/chef-repo/libexec/comv-chef_aa-secrets":1422995462555,"/Users/tra/src/chef-repo/cookbooks/aa/recipes/setup-aa.rb":1423000113620,"/Users/tra/src/chef-repo/cookbooks/aa/recipes/cassandra.rb":1422995434773},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":89229436},"tree-view":{"directoryExpansionStates":{"libexec":{}},"selectedPath":"/Users/tra/src/chef-repo/cookbooks","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}